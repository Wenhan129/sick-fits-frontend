{"version":3,"file":"static/webpack/static/development/pages/index.js.e46d992f86beea11de83.hot-update.js","sources":["webpack:///./components/Item.js","webpack:///./lib/formatMoney.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Link from \"next/link\";\nimport ItemStyles from \"./styles/ItemStyles\";\nimport Title from \"./styles/Title\";\nimport PriceTag from \"./styles/PriceTag\";\nimport formatMoney from \"../lib/formatMoney\";\n\nclass Item extends Component {\n  render() {\n    const { item } = this.props;\n    return (\n      <ItemStyles>\n        <Title>\n          <Link href={{ pathname: \"/item\", query: { id: item.id } }}>\n            <a>{item.title}</a>\n          </Link>\n        </Title>\n        <PriceTag>{item.price}</PriceTag>\n      </ItemStyles>\n    );\n  }\n}\n\nItem.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired\n  })\n};\n\nexport default Item;\n","export default function(amount) {\n  const options = {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n  };\n  // if its a whole, dollar amount, leave off the .00\n  if (amount % 100 === 0) options.minimumFractionDigits = 0;\n  const formatter = new Intl.NumberFormat('en-US', options);\n  return formatter.format(amount / 100);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAbA;AACA;AAeA;AACA;AACA;AACA;AAFA;AADA;AAOA;;;;;;;;;;;;AC/BA;AAAA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;;;;A","sourceRoot":""}