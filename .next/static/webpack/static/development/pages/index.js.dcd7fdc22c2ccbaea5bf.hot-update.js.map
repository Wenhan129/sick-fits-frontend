{"version":3,"file":"static/webpack/static/development/pages/index.js.dcd7fdc22c2ccbaea5bf.hot-update.js","sources":["webpack:///./components/DeleteItem.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { ALL_ITEMS_QUERY } from \"./Items\";\nimport gql from \"graphql-tag\";\n\nconst DELETE_ITEM_MUTATION = gql`\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\n    deleteItem(id: $id) {\n      id\n      title\n      description\n    }\n  }\n`;\n\nclass DeleteItem extends Component {\n  update = (cache, payload) => {\n    // manually update the cache on the client, so it matches the server\n    // 1. Read the cache for the items we want\n    const data = cache.readQuery({ query: ALL_ITEMS_QUERY });\n    // 2. Filter the deleted item out of the page\n    console.log(data.items);\n    data.items = data.items.filter(item => item.id !== payload.deleteItem.id);\n    // 3. Put the items back\n    cache.writeQuery({ query: ALL_ITEMS_QUERY, data });\n  };\n\n  handleDelete = (e, deleteItemMutation) => {\n    if (confirm(\"Are you sure you want to delete this item?\")) {\n      deleteItemMutation();\n    }\n  };\n\n  render() {\n    return (\n      <Mutation\n        mutation={DELETE_ITEM_MUTATION}\n        variables={{ id: this.props.id }}\n        update={this.update}\n      >\n        {(deleteItem, { error }) => (\n          <button onClick={e => this.handleDelete(e, deleteItem)}>\n            {this.props.children}\n          </button>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default DeleteItem;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AASA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;;;;AAhCA;AACA;AAkCA;;;;A","sourceRoot":""}